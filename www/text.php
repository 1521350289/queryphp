<?php return [ [ 'auth', function ($app) { $app ['auth.loaded'] = true; $app ['auth.loaded2'] = "我爱你的"; return new AuthManager ( $app ); } ], [ 'auth.driver', function ($app) { return $app ['auth']->guard (); } ], [ 'sssssssssssss', function ($app) { return call_user_func ( $app ['auth']->userResolver () ); } ], [ 'yello', function ($app) { return new Gate ( $app, function () use($app) { return call_user_func ( $app ['auth']->userResolver () ); } ); } ], function () { Paginator::currentPathResolver ( function () { return $this->app ['request']->url (); } ); }, function () { Paginator::currentPageResolver ( function ($pageName = 'page') { $page = $this->app ['request']->input ( $pageName ); if (filter_var ( $page, FILTER_VALIDATE_INT ) !== false && ( int ) $page >= 1) { return $page; } return 1; } ); }, 'hash', function () { return new BcryptHasher (); }, 'redis', function ($app) { return new Database ( $app ['config'] ['database.redis'] ); }, [ 'router', function () { $this->app->share ( function ($app) { return new Router ( $app ['events'], $app ); } ); } ] ];